function solution(A, B) {
  /**
   * 무작위로 자연수하나를 부여받음
   * 딱 한번만 경기
   * 서로의 수를 공개해서 큰쪽이 승리 => 승리 시 1점
   * 숫자가 같다면 무승부 => 아무도 승점을 얻지 않음
   * A팀의 순서를 알 때, B팀이 얻을 수 있는 최대 점수
   *
   * greedy?
   */

  // 순서를 알고 있으므로 sort해도 상관없음
  A.sort((a, b) => a - b);
  B.sort((a, b) => a - b);

  let answer = 0;
  A.some((a) => {
    const b = B.findIndex((b) => b > a); // a 보다 첫 번째로 큰 수를 찾는다
    if (!~b) {
      return false; // continue
    }

    B[b] = -1;
    answer++;
  });

  console.log(answer);
  return answer;
}

solution([5, 1, 3, 7], [2, 2, 6, 8]);

/**
 * 채점을 시작합니다.
정확성  테스트
테스트 1 〉	통과 (0.11ms, 30.2MB)
테스트 2 〉	통과 (0.11ms, 30MB)
테스트 3 〉	통과 (0.13ms, 30MB)
테스트 4 〉	통과 (0.12ms, 30.2MB)
테스트 5 〉	통과 (0.22ms, 30.2MB)
테스트 6 〉	통과 (0.39ms, 30MB)
테스트 7 〉	통과 (0.37ms, 30.1MB)
테스트 8 〉	통과 (0.15ms, 29.8MB)
테스트 9 〉	통과 (5.89ms, 31.9MB)
테스트 10 〉	통과 (6.07ms, 31.8MB)
테스트 11 〉	통과 (7.20ms, 31.8MB)
테스트 12 〉	통과 (2.87ms, 31.9MB)
테스트 13 〉	통과 (36.93ms, 31.9MB)
테스트 14 〉	통과 (48.75ms, 32.1MB)
테스트 15 〉	통과 (38.31ms, 32.7MB)
테스트 16 〉	통과 (52.90ms, 32.1MB)
테스트 17 〉	통과 (24.21ms, 31.8MB)
테스트 18 〉	통과 (0.65ms, 30.4MB)
효율성  테스트
테스트 1 〉	실패 (시간 초과)
테스트 2 〉	실패 (시간 초과)
테스트 3 〉	실패 (시간 초과)
채점 결과
정확성: 42.9
효율성: 0.0
합계: 42.9 / 50
 */
